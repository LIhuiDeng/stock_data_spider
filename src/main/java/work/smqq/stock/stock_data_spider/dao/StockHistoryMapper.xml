<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work.smqq.stock.stock_data_spider.dao.StockHistoryMapper">
  <resultMap id="BaseResultMap" type="work.smqq.stock.stock_data_spider.model.StockHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="price_now" jdbcType="REAL" property="priceNow" />
    <result column="price_finish_yesterday" jdbcType="REAL" property="priceFinishYesterday" />
    <result column="price_max_today" jdbcType="REAL" property="priceMaxToday" />
    <result column="price_min_today" jdbcType="REAL" property="priceMinToday" />
    <result column="price_start_today" jdbcType="REAL" property="priceStartToday" />
    <result column="pe" jdbcType="REAL" property="pe" />
    <result column="pb" jdbcType="REAL" property="pb" />
    <result column="volume" jdbcType="BIGINT" property="volume" />
    <result column="turn_volume" jdbcType="DOUBLE" property="turnVolume" />
    <result column="change_percent" jdbcType="REAL" property="changePercent" />
    <result column="change_amount" jdbcType="REAL" property="changeAmount" />
    <result column="amplitude" jdbcType="REAL" property="amplitude" />
    <result column="turn_over" jdbcType="REAL" property="turnOver" />
    <result column="qrr" jdbcType="REAL" property="qrr" />
    <result column="trade_date" jdbcType="VARCHAR" property="tradeDate" />
    <result column="board_code" jdbcType="VARCHAR" property="boardCode" />
    <result column="board_name" jdbcType="VARCHAR" property="boardName" />
    <result column="market_value" jdbcType="DOUBLE" property="marketValue" />
    <result column="circulation_market_value" jdbcType="DOUBLE" property="circulationMarketValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stock_name, stock_code, price_now, price_finish_yesterday, price_max_today, price_min_today, 
    price_start_today, pe, pb, volume, turn_volume, change_percent, change_amount, amplitude, 
    turn_over, qrr, trade_date, board_code, board_name, market_value, circulation_market_value
  </sql>
  <select id="selectByExample" parameterType="work.smqq.stock.stock_data_spider.model.StockHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_stock_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_stock_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_stock_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="work.smqq.stock.stock_data_spider.model.StockHistoryExample">
    delete from tb_stock_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="work.smqq.stock.stock_data_spider.model.StockHistory">
    insert into tb_stock_history (id, stock_name, stock_code, 
      price_now, price_finish_yesterday, price_max_today, 
      price_min_today, price_start_today, pe, 
      pb, volume, turn_volume, 
      change_percent, change_amount, amplitude, 
      turn_over, qrr, trade_date, 
      board_code, board_name, market_value, 
      circulation_market_value)
    values (#{id,jdbcType=INTEGER}, #{stockName,jdbcType=VARCHAR}, #{stockCode,jdbcType=VARCHAR}, 
      #{priceNow,jdbcType=REAL}, #{priceFinishYesterday,jdbcType=REAL}, #{priceMaxToday,jdbcType=REAL}, 
      #{priceMinToday,jdbcType=REAL}, #{priceStartToday,jdbcType=REAL}, #{pe,jdbcType=REAL}, 
      #{pb,jdbcType=REAL}, #{volume,jdbcType=BIGINT}, #{turnVolume,jdbcType=DOUBLE}, 
      #{changePercent,jdbcType=REAL}, #{changeAmount,jdbcType=REAL}, #{amplitude,jdbcType=REAL}, 
      #{turnOver,jdbcType=REAL}, #{qrr,jdbcType=REAL}, #{tradeDate,jdbcType=VARCHAR}, 
      #{boardCode,jdbcType=VARCHAR}, #{boardName,jdbcType=VARCHAR}, #{marketValue,jdbcType=DOUBLE}, 
      #{circulationMarketValue,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="work.smqq.stock.stock_data_spider.model.StockHistory">
    insert into tb_stock_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stockName != null">
        stock_name,
      </if>
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="priceNow != null">
        price_now,
      </if>
      <if test="priceFinishYesterday != null">
        price_finish_yesterday,
      </if>
      <if test="priceMaxToday != null">
        price_max_today,
      </if>
      <if test="priceMinToday != null">
        price_min_today,
      </if>
      <if test="priceStartToday != null">
        price_start_today,
      </if>
      <if test="pe != null">
        pe,
      </if>
      <if test="pb != null">
        pb,
      </if>
      <if test="volume != null">
        volume,
      </if>
      <if test="turnVolume != null">
        turn_volume,
      </if>
      <if test="changePercent != null">
        change_percent,
      </if>
      <if test="changeAmount != null">
        change_amount,
      </if>
      <if test="amplitude != null">
        amplitude,
      </if>
      <if test="turnOver != null">
        turn_over,
      </if>
      <if test="qrr != null">
        qrr,
      </if>
      <if test="tradeDate != null">
        trade_date,
      </if>
      <if test="boardCode != null">
        board_code,
      </if>
      <if test="boardName != null">
        board_name,
      </if>
      <if test="marketValue != null">
        market_value,
      </if>
      <if test="circulationMarketValue != null">
        circulation_market_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="priceNow != null">
        #{priceNow,jdbcType=REAL},
      </if>
      <if test="priceFinishYesterday != null">
        #{priceFinishYesterday,jdbcType=REAL},
      </if>
      <if test="priceMaxToday != null">
        #{priceMaxToday,jdbcType=REAL},
      </if>
      <if test="priceMinToday != null">
        #{priceMinToday,jdbcType=REAL},
      </if>
      <if test="priceStartToday != null">
        #{priceStartToday,jdbcType=REAL},
      </if>
      <if test="pe != null">
        #{pe,jdbcType=REAL},
      </if>
      <if test="pb != null">
        #{pb,jdbcType=REAL},
      </if>
      <if test="volume != null">
        #{volume,jdbcType=BIGINT},
      </if>
      <if test="turnVolume != null">
        #{turnVolume,jdbcType=DOUBLE},
      </if>
      <if test="changePercent != null">
        #{changePercent,jdbcType=REAL},
      </if>
      <if test="changeAmount != null">
        #{changeAmount,jdbcType=REAL},
      </if>
      <if test="amplitude != null">
        #{amplitude,jdbcType=REAL},
      </if>
      <if test="turnOver != null">
        #{turnOver,jdbcType=REAL},
      </if>
      <if test="qrr != null">
        #{qrr,jdbcType=REAL},
      </if>
      <if test="tradeDate != null">
        #{tradeDate,jdbcType=VARCHAR},
      </if>
      <if test="boardCode != null">
        #{boardCode,jdbcType=VARCHAR},
      </if>
      <if test="boardName != null">
        #{boardName,jdbcType=VARCHAR},
      </if>
      <if test="marketValue != null">
        #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="circulationMarketValue != null">
        #{circulationMarketValue,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="work.smqq.stock.stock_data_spider.model.StockHistoryExample" resultType="java.lang.Long">
    select count(*) from tb_stock_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_stock_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stockName != null">
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCode != null">
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.priceNow != null">
        price_now = #{record.priceNow,jdbcType=REAL},
      </if>
      <if test="record.priceFinishYesterday != null">
        price_finish_yesterday = #{record.priceFinishYesterday,jdbcType=REAL},
      </if>
      <if test="record.priceMaxToday != null">
        price_max_today = #{record.priceMaxToday,jdbcType=REAL},
      </if>
      <if test="record.priceMinToday != null">
        price_min_today = #{record.priceMinToday,jdbcType=REAL},
      </if>
      <if test="record.priceStartToday != null">
        price_start_today = #{record.priceStartToday,jdbcType=REAL},
      </if>
      <if test="record.pe != null">
        pe = #{record.pe,jdbcType=REAL},
      </if>
      <if test="record.pb != null">
        pb = #{record.pb,jdbcType=REAL},
      </if>
      <if test="record.volume != null">
        volume = #{record.volume,jdbcType=BIGINT},
      </if>
      <if test="record.turnVolume != null">
        turn_volume = #{record.turnVolume,jdbcType=DOUBLE},
      </if>
      <if test="record.changePercent != null">
        change_percent = #{record.changePercent,jdbcType=REAL},
      </if>
      <if test="record.changeAmount != null">
        change_amount = #{record.changeAmount,jdbcType=REAL},
      </if>
      <if test="record.amplitude != null">
        amplitude = #{record.amplitude,jdbcType=REAL},
      </if>
      <if test="record.turnOver != null">
        turn_over = #{record.turnOver,jdbcType=REAL},
      </if>
      <if test="record.qrr != null">
        qrr = #{record.qrr,jdbcType=REAL},
      </if>
      <if test="record.tradeDate != null">
        trade_date = #{record.tradeDate,jdbcType=VARCHAR},
      </if>
      <if test="record.boardCode != null">
        board_code = #{record.boardCode,jdbcType=VARCHAR},
      </if>
      <if test="record.boardName != null">
        board_name = #{record.boardName,jdbcType=VARCHAR},
      </if>
      <if test="record.marketValue != null">
        market_value = #{record.marketValue,jdbcType=DOUBLE},
      </if>
      <if test="record.circulationMarketValue != null">
        circulation_market_value = #{record.circulationMarketValue,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_stock_history
    set id = #{record.id,jdbcType=INTEGER},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      price_now = #{record.priceNow,jdbcType=REAL},
      price_finish_yesterday = #{record.priceFinishYesterday,jdbcType=REAL},
      price_max_today = #{record.priceMaxToday,jdbcType=REAL},
      price_min_today = #{record.priceMinToday,jdbcType=REAL},
      price_start_today = #{record.priceStartToday,jdbcType=REAL},
      pe = #{record.pe,jdbcType=REAL},
      pb = #{record.pb,jdbcType=REAL},
      volume = #{record.volume,jdbcType=BIGINT},
      turn_volume = #{record.turnVolume,jdbcType=DOUBLE},
      change_percent = #{record.changePercent,jdbcType=REAL},
      change_amount = #{record.changeAmount,jdbcType=REAL},
      amplitude = #{record.amplitude,jdbcType=REAL},
      turn_over = #{record.turnOver,jdbcType=REAL},
      qrr = #{record.qrr,jdbcType=REAL},
      trade_date = #{record.tradeDate,jdbcType=VARCHAR},
      board_code = #{record.boardCode,jdbcType=VARCHAR},
      board_name = #{record.boardName,jdbcType=VARCHAR},
      market_value = #{record.marketValue,jdbcType=DOUBLE},
      circulation_market_value = #{record.circulationMarketValue,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="work.smqq.stock.stock_data_spider.model.StockHistory">
    update tb_stock_history
    <set>
      <if test="stockName != null">
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="priceNow != null">
        price_now = #{priceNow,jdbcType=REAL},
      </if>
      <if test="priceFinishYesterday != null">
        price_finish_yesterday = #{priceFinishYesterday,jdbcType=REAL},
      </if>
      <if test="priceMaxToday != null">
        price_max_today = #{priceMaxToday,jdbcType=REAL},
      </if>
      <if test="priceMinToday != null">
        price_min_today = #{priceMinToday,jdbcType=REAL},
      </if>
      <if test="priceStartToday != null">
        price_start_today = #{priceStartToday,jdbcType=REAL},
      </if>
      <if test="pe != null">
        pe = #{pe,jdbcType=REAL},
      </if>
      <if test="pb != null">
        pb = #{pb,jdbcType=REAL},
      </if>
      <if test="volume != null">
        volume = #{volume,jdbcType=BIGINT},
      </if>
      <if test="turnVolume != null">
        turn_volume = #{turnVolume,jdbcType=DOUBLE},
      </if>
      <if test="changePercent != null">
        change_percent = #{changePercent,jdbcType=REAL},
      </if>
      <if test="changeAmount != null">
        change_amount = #{changeAmount,jdbcType=REAL},
      </if>
      <if test="amplitude != null">
        amplitude = #{amplitude,jdbcType=REAL},
      </if>
      <if test="turnOver != null">
        turn_over = #{turnOver,jdbcType=REAL},
      </if>
      <if test="qrr != null">
        qrr = #{qrr,jdbcType=REAL},
      </if>
      <if test="tradeDate != null">
        trade_date = #{tradeDate,jdbcType=VARCHAR},
      </if>
      <if test="boardCode != null">
        board_code = #{boardCode,jdbcType=VARCHAR},
      </if>
      <if test="boardName != null">
        board_name = #{boardName,jdbcType=VARCHAR},
      </if>
      <if test="marketValue != null">
        market_value = #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="circulationMarketValue != null">
        circulation_market_value = #{circulationMarketValue,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="work.smqq.stock.stock_data_spider.model.StockHistory">
    update tb_stock_history
    set stock_name = #{stockName,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      price_now = #{priceNow,jdbcType=REAL},
      price_finish_yesterday = #{priceFinishYesterday,jdbcType=REAL},
      price_max_today = #{priceMaxToday,jdbcType=REAL},
      price_min_today = #{priceMinToday,jdbcType=REAL},
      price_start_today = #{priceStartToday,jdbcType=REAL},
      pe = #{pe,jdbcType=REAL},
      pb = #{pb,jdbcType=REAL},
      volume = #{volume,jdbcType=BIGINT},
      turn_volume = #{turnVolume,jdbcType=DOUBLE},
      change_percent = #{changePercent,jdbcType=REAL},
      change_amount = #{changeAmount,jdbcType=REAL},
      amplitude = #{amplitude,jdbcType=REAL},
      turn_over = #{turnOver,jdbcType=REAL},
      qrr = #{qrr,jdbcType=REAL},
      trade_date = #{tradeDate,jdbcType=VARCHAR},
      board_code = #{boardCode,jdbcType=VARCHAR},
      board_name = #{boardName,jdbcType=VARCHAR},
      market_value = #{marketValue,jdbcType=DOUBLE},
      circulation_market_value = #{circulationMarketValue,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>